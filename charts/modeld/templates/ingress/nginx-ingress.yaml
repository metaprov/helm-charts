apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: modeld-ingress
  namespace: modeld-system
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: modeld-ingress
    app.kubernetes.io/part-of: "modeld"
    app.kubernetes.io/managed-by: "helm"
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/cors-allow-origin: '$http_origin'
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    ingress.kubernetes.io/proxy-body-size: 8m
    nginx.org/proxy-connect-timeout: 30s
    nginx.org/proxy-read-timeout: 20s
    nginx.org/client-max-body-size: 50m
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "x-user-agent,x-grpc-web,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
    rules:
      - host: modeld.info
        http:
          paths:
            - path: /
              backend:
                service:
                  name: frontend
                  port: 
                    number: 80
              pathType: ImplementationSpecific      

            - path: /upload
              backend:
                service:
                  name: modeld-datadock
                  port: 
                    number: 8095
              pathType: ImplementationSpecific      
      - host: api.modeld.info
        http:
          paths:
            - path: /
              backend:
                service:
                  name: modeld-api-proxy
                  port: 
                    number: 8080
              pathType: ImplementationSpecific      