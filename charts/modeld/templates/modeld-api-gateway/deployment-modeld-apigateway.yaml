apiVersion: apps/v1
kind: Deployment
metadata:
  name: modeld-apigateway
  namespace: modeld-system
  labels:
    app: modeld-apigateway
spec:
  replicas: {{ .Values.apigateway.replicaCount }}
  selector:
    matchLabels:
      app: modeld-apigateway
  template:
    metadata:
      labels:
        app: modeld-apigateway
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.modeld.tag }}
        app.kubernetes.io/component: apigateway
        app.kubernetes.io/part-of: "modeld"
        app.kubernetes.io/managed-by: "helm"
{{- if eq .Values.modeld.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
        prometheus.io/path: "/"
{{- end }}
    spec:
        serviceAccountName: modeld-apigateway
        containers:
          - name: main
            image: {{ include "modeld.apigatewayImage" . }}
            imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
            ports:
              - containerPort: 8080
                name: apigateway
              - containerPort: 9090
                name: metrics
              - containerPort: 8008
                name: profiling
            readinessProbe :
              exec:
                command: [ "/bin/grpc_health_probe", "-addr=:8080" ]
              initialDelaySeconds: 5
            livenessProbe:
              exec:
                command: [ "/bin/grpc_health_probe", "-addr=:8080" ]
              initialDelaySeconds: 10
            resources:
                limits:
                  cpu: 1000m
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 20Mi
            volumeMounts:
              - name: data
                mountPath: /home/modeld/data
          - name: clouds
            image: {{ include "modeld.cloudImage" . }}
            imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
            ports:
                - containerPort: 8090
                  name: http
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
            volumeMounts:
                - name: data
                  mountPath: /home/modeld/data
            resources:
              limits:
                cpu: 1000m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 20Mi
            livenessProbe:
                httpGet:
                  path: /healthz
                  port: 9090
                initialDelaySeconds: 5
                periodSeconds: 10
{{- with .Values.apigateway.extraEnv }}
            env:
              {{- toYaml . | nindent 14 }}
{{- end }}
{{- with .Values.apigateway.nodeSelector }}
        nodeSelector:
            {{- toYaml . | nindent 12 }}
{{- end }}
{{- with .Values.apigateway.tolerations }}
        tolerations:
            {{- toYaml . | nindent 12 }}
{{- end }}
    volumes:
      - name: data
        emptyDir: {}