apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modeld.apigatewayFullname" . }}
  namespace: modeld-system
  labels:
  {{- include "modeld.apigatewayLabels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.modeld.revisionHistoryLimit }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "modeld.apigatewaySelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "modeld.apigatewaySelectorLabels" . | nindent 8 }}
{{- if eq .Values.modeld.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
        prometheus.io/path: "/"
{{- end }}
    spec:
      serviceAccountName: modeld-apigateway
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "modeld.apigatewayPriorityClassName" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.modeld.podSecurityContext | nindent 8 }}
        terminationGracePeriodSeconds: {{ .Values.apigateway.terminationGracePeriodSeconds }}
      containers:
        - name: main
          image: {{ include "modeld.apigatewayImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8080
              name: apigateway
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          {{- with .Values.apigateway.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.apigateway.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.modeld.containerSecurityContext | nindent 12 }}
          readinessProbe:
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:8080" ]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:8080" ]
            initialDelaySeconds: 10
          resources: {{ toYaml .Values.apigateway.resources | nindent 12 }}
          volumeMounts:
          - name: "data"
            mountPath: {{ .Values.global.cachePath }}

        - name: clouds
          image: {{ include "modeld.cloudImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
              - containerPort: 8090
                name: http
              - containerPort: 9090
                name: metrics
              - containerPort: 8008
                name: profiling
          volumeMounts:
              - name: data
                mountPath: {{ .Values.modeld.cachePath }}
          resources: {{ toYaml .Values.clouds.resources | nindent 12 }}
          livenessProbe: {{ toYaml .Values.clouds.livenessProbe | nindent 12 }}
          {{- with .Values.apigateway.extraEnv }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.apigateway.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apigateway.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          emptyDir: { }