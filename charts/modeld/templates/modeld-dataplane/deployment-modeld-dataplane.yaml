apiVersion: apps/v1
kind: Deployment
metadata:
  name: modeld-dataplane
  namespace: modeld-system
  labels:
      app: modeld-dataplane
spec:
  selector:
    matchLabels:
      app: modeld-dataplane
  template:
    metadata:
      labels:
        app: modeld-dataplane
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.modeld.tag }}
        app.kubernetes.io/component: dataplane
        app.kubernetes.io/part-of: "modeld"
        app.kubernetes.io/managed-by: "helm"
{{- if eq .Values.modeld.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
        prometheus.io/path: "/"
{{- end }}
    spec:
      serviceAccountName: modeld-service-account
      containers:
        - name: main
          image: "{{ .Values.dataplane.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | quote }}
          ports:
            - containerPort: 8080
              name: dataplane
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          env:
            - name:   HOST
              value:  "0.0.0.0"
            - name:   PORT
              value: "8080"
            - name: CACHE_PATH
              value: /home/modeld/data
          volumeMounts:
            - name: data
              mountPath: /home/modeld/data
        - name: clouds
           image: {{ include "modeld.cloudImage" . }}
           imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
           ports:
                - containerPort: 8090
                  name: http
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
           volumeMounts:
                - name: data
                  mountPath: /home/modeld/data
           resources:
                limits:
                  cpu: 1000m
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 20Mi
           livenessProbe:
                httpGet:
                  path: /healthz
                  port: 9090
                initialDelaySeconds: 5
                periodSeconds: 10
  {{- with .Values.apigateway.extraEnv }}
      env:
        {{- toYaml . | nindent 14 }}
  {{- end }}
  {{- with .Values.apigateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 12 }}
  {{- end }}
  {{- with .Values.apigateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 12 }}
  {{- end }}


     volumes:
       - name : data
         emptyDir: {}