apiVersion: apps/v1
kind: Deployment
metadata:
  name: modeld-controlplane
  namespace: modeld-system
  labels:
    app: modeld-controlplane
{{- if eq .Values.modeld.prometheus.enabled true }}
  annotations:
    prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
    prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
    prometheus.io/path: "/"
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: modeld-controlplane
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.modeld.tag }}
        app.kubernetes.io/component: controlplane
        app.kubernetes.io/part-of: "modeld"
        app.kubernetes.io/managed-by: "helm"
    spec:
      serviceAccountName: modeld-controlplane
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 10 }}
{{- end }}
      containers:
        - name: main
          image: {{ include "modeld.controlplaneImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8080
              name: controlplane
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
{{- with .Values.controlplane.extraEnv }}
          env:
            {{- toYaml . | nindent 14 }}
{{- end }}
{{- with .Values.controlplane.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 14 }}
{{- end }}
          resources:
{{- toYaml .Values.controlplane.resources | nindent 14 }}
          volumeMounts:
            - name: data
              mountPath: /home/modeld/data
            - name: webhook-server-cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true

        - name: clouds
          image: {{ include "modeld.cloudImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8090
              name: http
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          volumeMounts:
            - name: data
              mountPath: /home/modeld/data
          resources:
              {{- toYaml .Values.clouds.resources | nindent 14 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
{{- with .Values.controlplane.extraEnv }}
          env:
            {{- toYaml . | nindent 14 }}
{{- end }}
{{- with .Values.controlplane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 12 }}
{{- end }}
    volumes:
      - name : data
        emptyDir: {}
      - name: webhook-server-cert
        secret:
          secretName: webhook-secret