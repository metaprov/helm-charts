apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modeld.controlplaneFullname" . }}
  namespace: modeld-system
  labels:
  {{- include "modeld.controlplaneLabels" . | nindent 4 }}
  {{- if eq .Values.modeld.prometheus.enabled true }}
  annotations:
    prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
    prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
    prometheus.io/path: "/"
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.modeld.revisionHistoryLimit }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "modeld.controlplaneSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "modeld.controlplaneSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: modeld-controlplane
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "modeld.controlplanePriorityClassName" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.modeld.podSecurityContext | nindent 8 }}
        terminationGracePeriodSeconds: {{ .Values.controlplane.terminationGracePeriodSeconds }}
      containers:
        - name: main
          image: {{ include "modeld.controlplaneImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8080
              name: controlplane
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          {{- with .Values.controlplane.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.controlplane.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources: {{ toYaml .Values.controlplane.resources | nindent 12 }}
          volumeMounts:
            - name: "data"
              mountPath: {{ .Values.modeld.cachePath }}
            - name: webhook-server-cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true

        - name: clouds
          image: {{ include "modeld.cloudImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8090
              name: http
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          volumeMounts:
            - name: data
              mountPath: {{ .Values.modeld.cachePath }}
          resources: {{ toYaml .Values.clouds.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.controlplane.extraEnv }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.controlplane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlplane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name : data
          emptyDir: {}
        - name: webhook-server-cert
          secret:
            secretName: webhook-secret