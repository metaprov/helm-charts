apiVersion: apps/v1
kind: Deployment
metadata:
  name: modeld-apiproxy
  namespace: modeld-system
  labels:
    app: modeld-apiproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: modeld-apiproxy
  template:
      metadata:
        labels:
          app: modeld-apiproxy
          app.kubernetes.io/name: {{ .Release.Name }}
          app.kubernetes.io/version: {{ .Values.modeld.tag }}
          app.kubernetes.io/component: apiproxy
          app.kubernetes.io/part-of: "modeld"
          app.kubernetes.io/managed-by: "helm"
{{- if eq .Values.modeld.prometheus.enabled true }}
        annotations:
          prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
          prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
          prometheus.io/path: "/"
{{- end }}
      spec:
        serviceAccountName: modeld-apiproxy
{{- with .Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 8 }}
{{- end }}
        securityContext:
          {{- toYaml .Values.modeld.podSecurityContext | nindent 12 }}
        containers:
          - name: main
            image: {{ include "modeld.apiproxyImage" . }}
            imagePullPolicy: {{ .Values.modeld.pullPolicy | quote  }}
            ports:
              - containerPort: 8080
                name: apiproxy
              - containerPort: 9090
                name: metrics
              - containerPort: 8008
                name: profiling
{{- with .Values.apiproxy.extraEnv }}
            env:
              {{- toYaml . | nindent 14 }}
{{- end }}
{{- with .Values.apiproxy.extraEnvFrom }}
            envFrom:
              {{- toYaml . | nindent 14 }}
{{- end }}
            securityContext:
              {{- toYaml .Values.modeld.containerSecurityContext  | nindent 14 }}
            resources:
              {{- toYaml .Values.apiproxy.resources | nindent 14 }}