apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: modeld-archive
    app.kubernetes.io/part-of: modeld
    app.kubernetes.io/component: infra
  name: modeld-archive
  namespace: modeld-system
spec:
  replicas: {{ .Values.archive.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: modeld-archive
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: modeld-archive
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      serviceAccountName: modeld-archive
      containers:
        - name: main
          image: "{{ .Values.archive.image.registry }}/{{ .Values.archive.image.repository }}:{{ .Values.archive.image.tag }}"
          imagePullPolicy: {{ .Values.archive.image.pullPolicy }}
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9091
              name: metrics          
          volumeMounts:
            - name: data
              mountPath: /home/modeld/data
          resources:
              limits:
                cpu: "{{.Values.archive.resources.limits.cpu}}"
                memory: "{{.Values.archive.resources.limits.memory}}"
              requests:
                cpu: "{{.Values.archive.resources.requests.cpu}}"
                memory: "{{.Values.archive.resources.requests.memory}}"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
              exec:
                command: ["/bin/grpc_health_probe", "-addr=:8080"]
              initialDelaySeconds: 10
              timeoutSeconds: 5
          env:
            - name: AUTH_HOST
              value: "modeld-auth"
            - name: AUTH_PORT
              value: "8080"
            - name: FAKE
              value: "false"
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8080"
            - name: DEBUG
              value: "true"
            - name: ENV
              value: "dev"
            - name: CLOUDS_HOST
              value: "127.0.0.1"
            - name: CLOUDS_PORT
              value: "8090"
            - name: CACHE_PATH
              value: "/home/modeld/data"
            - name: DS_HOST
              value: modeld-data-plane
            - name: DS_PORT
              value: "8080"

        - name: clouds
          image: "{{ .Values.clouds.image.registry }}/{{ .Values.clouds.image.repository }}:{{ .Values.clouds.image.tag }}"
          imagePullPolicy: {{ .Values.clouds.image.pullPolicy }}
          ports:
            - containerPort: 8090
              name: http
          volumeMounts:
              - name: data
                mountPath: /home/modeld/data
          resources:
            limits:
              cpu: "{{.Values.clouds.resources.limits.cpu}}"
              memory: "{{.Values.clouds.resources.limits.memory}}"
            requests:
              cpu: "{{.Values.clouds.resources.requests.cpu}}"
              memory: "{{.Values.clouds.resources.requests.memory}}"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
             - name: GRPC_TRACE
               value: "all"
             - name:  GRPC_VERBOSITY
               value: "DEBUG"
             - name:  GRPC_GO_LOG_VERBOSITY_LEVEL
               value: "99"
             - name:  GRPC_GO_LOG_SEVERITY_LEVEL
               value: "info"
             - name:   HOST
               value:  "0.0.0.0"
             - name:   PORT
               value: "8090"
             - name:   DEBUG
               value: "false"
             - name: ENV
               value: "dev"
             - name: CACHE_PATH
               value: "/home/modeld/data"
      volumes:
       - name : data
         emptyDir: {}