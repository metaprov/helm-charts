apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modeld.datadockFullname" . }}
  namespace: modeld-system
  labels:
  {{- include "modeld.datadockLabels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.modeld.revisionHistoryLimit }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "modeld.datadockSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "modeld.datadockSelectorLabels" . | nindent 8 }}
  {{- if eq .Values.modeld.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.modeld.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.modeld.prometheus.port }}"
        prometheus.io/path: "/"
  {{- end }}
    spec:
      serviceAccountName: modeld-datadock
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- include "modeld.datadockPriorityClassName" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.modeld.podSecurityContext | nindent 8 }}
        terminationGracePeriodSeconds: {{ .Values.datadock.terminationGracePeriodSeconds }}
      containers:
        - name: main
          image: {{ include "modeld.datadockImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8095
              name: datadock
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          {{- with .Values.apigateway.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.apigateway.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.modeld.containerSecurityContext | nindent 12 }}


          {{- if .Values.datadock.resources }}
          resources: {{ toYaml .Values.datadock.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "data"
              mountPath: {{ .Values.global.cachePath }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: clouds
          image: {{ include "modeld.cloudImage" . }}
          imagePullPolicy: {{ .Values.modeld.pullPolicy | quote }}
          ports:
            - containerPort: 8090
              name: http
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          volumeMounts:
            - name: data
              mountPath: {{ .Values.modeld.cachePath }}
          resources: {{ toYaml .Values.clouds.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.apigateway.extraEnv }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}

    {{- with .Values.apigateway.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.apigateway.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    volumes:
      - name: data
        emptyDir: { }