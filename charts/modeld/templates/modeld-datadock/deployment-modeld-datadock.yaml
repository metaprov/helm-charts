apiVersion: apps/v1
kind: Deployment
metadata:
  name: modeld-data-dock
  namespace: modeld-system
  labels:
    app: modeld-data-dock
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.global.tag }}
    app.kubernetes.io/component: modeld-data-dock
    app.kubernetes.io/part-of: "modeld"
    app.kubernetes.io/managed-by: "helm"
spec:
  selector:
    matchLabels:
      app: modeld-data-dock
  template:
    metadata:
      labels:
        app: modeld-data-dock
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.global.tag }}
        app.kubernetes.io/component: modeld-data-dock
        app.kubernetes.io/part-of: "modeld"
        app.kubernetes.io/managed-by: "helm"
  {{- if eq .Values.global.prometheus.enabled true }}
  annotations:
    prometheus.io/scrape: "{{ .Values.global.prometheus.enabled }}"
    prometheus.io/port: "{{ .Values.global.prometheus.port }}"
    prometheus.io/path: "/"
  {{- end }}
  spec:
    serviceAccountName: modeld-service-account
    containers:
      - name: main
        image: "{{ .Values.global.registry }}/{{ .Values.datadock.image.repository }}:{{ .Values.global.tag }}"
        env:
          - name:   HOST
            value:  "0.0.0.0"
          - name:   PORT
            value: "8080"
          - name:   DEBUG
            value: "false"
          - name: ENV
            value: "dev"
          - name: CACHE_PATH
            value: "/home/modeld/data"
          - name: CLOUDS_HOST
            value: "127.0.0.1"
          - name: CLOUDS_PORT
            value: "8090"

        ports:
          - containerPort: 8095
            name: datadock
          - containerPort: 9090
            name: metrics
          - containerPort: 8008
            name: profiling
        {{- if .Values.datadock.resources }}
        resources: {{ toYaml .Values.datadock.resources | nindent 12 }}
        {{- end }}
        volumeMounts:
          - name: "data"
            mountPath: {{ .Values.global.cachePath }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 10

      - name: clouds
        image: quay.io/metaprov/modeld-clouds
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8090
            name: http
          - containerPort: 9090
            name: metrics
          - containerPort: 8008
            name: profiling
        volumeMounts:
          - name: data
            mountPath: {{ .Values.global.cachePath }}
        resources:
          limits:
            cpu: 50m
            memory: 30Mi
          requests:
            cpu: 50m
            memory: 20Mi
        env:
          - name:   HOST
            value:  "0.0.0.0"
          - name:   PORT
            value: "8090"
          - name:   DEBUG
            value: "false"
          - name: ENV
            value: "dev"
          - name: CACHE_PATH
            value: {{ .Values.global.cachePath }}
    volumes:
      - name : data
        emptyDir: {}